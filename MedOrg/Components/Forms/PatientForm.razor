@using MedOrg.Data.Models.Entities.Patients

<EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />

    <div class="row">
        <div class="col-md-4 mb-3">
            <label class="form-label">Фамилия *</label>
            <InputText class="form-control" @bind-Value="Model.LastName" />
            <ValidationMessage For="@(() => Model.LastName)" />
        </div>
        <div class="col-md-4 mb-3">
            <label class="form-label">Имя *</label>
            <InputText class="form-control" @bind-Value="Model.FirstName" />
            <ValidationMessage For="@(() => Model.FirstName)" />
        </div>
        <div class="col-md-4 mb-3">
            <label class="form-label">Отчество</label>
            <InputText class="form-control" @bind-Value="Model.MiddleName" />
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Дата рождения *</label>
        <InputDate class="form-control" @bind-Value="Model.BirthDate" />
        <ValidationMessage For="@(() => Model.BirthDate)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Адрес *</label>
        <InputText class="form-control" @bind-Value="Model.Address" />
        <ValidationMessage For="@(() => Model.Address)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Телефон</label>
        <InputText class="form-control" @bind-Value="Model.Phone" placeholder="+7 (XXX) XXX-XX-XX" />
        <ValidationMessage For="@(() => Model.Phone)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Номер страхового полиса *</label>
        <InputText class="form-control" @bind-Value="Model.InsuranceNumber" />
        <ValidationMessage For="@(() => Model.InsuranceNumber)" />
    </div>

    <div class="d-flex gap-2">
        <button type="submit" class="btn btn-primary">@(IsEdit ? "Сохранить" : "Добавить")</button>
        <button type="button" class="btn btn-secondary" @onclick="OnCancel">Отмена</button>
    </div>
</EditForm>

@code {
    [Parameter] public Patient Model { get; set; } = new();
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task HandleSubmit()
    {
        await OnSubmit.InvokeAsync();
    }
}