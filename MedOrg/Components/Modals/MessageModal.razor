@if (IsVisible)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header @GetHeaderClass()">
                    <h5 class="modal-title text-white">@Title</h5>
                    <button type="button" class="btn-close btn-close-white" @onclick="Close"></button>
                </div>
                <div class="modal-body">
                    <p>@Message</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="Close">Закрыть</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public string Title { get; set; } = "Сообщение";
    [Parameter] public string Message { get; set; } = "";
    [Parameter] public MessageType Type { get; set; } = MessageType.Info;
    [Parameter] public EventCallback OnClose { get; set; }

    private string GetHeaderClass()
    {
        return Type switch
        {
            MessageType.Success => "bg-success",
            MessageType.Error => "bg-danger",
            MessageType.Warning => "bg-warning",
            _ => "bg-info"
        };
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }

    public enum MessageType
    {
        Info,
        Success,
        Warning,
        Error
    }
}